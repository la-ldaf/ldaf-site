name: "Linting and Unit Testing"

#  by default, runs when a PR activity type
#  is `opened`, `synchronize`, or `reopened`
# (https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request)
on: pull_request

# Allow the coverage reporter to write comments on GitHub PRs
permissions:
  contents: write
  pull-requests: write

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    # Create a GitHub Pages subpath for this PR
    env:
      PR_PATH: pull/${{ github.event.number }}/unit-test-coverage

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: npm

      - name: Install
        run: npm ci

      - name: Prettier & ESLint
        run: npm run lint

      - name: svelte-check (diagnostic checks for unused CSS, Svelte A11y hints, and JS/TS errors)
        run: npm run check

      - name: Unit tests
        run: npm run test:unit:coverage

      - name: Report code coverage to PR in comment
        # https://github.com/marketplace/actions/code-coverage-report
        # Use a hash instead of version to support delete-old-comments field:
        # https://github.com/romeovs/lcov-reporter-action/issues/47#issuecomment-1362606540
        uses: romeovs/lcov-reporter-action@2a28ec3e25fb7eae9cb537e9141603486f810d1a
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          delete-old-comments: true

      - name: Set coverage report GitHub Pages preview URL
        run: echo "BASE_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ env.PR_PATH}}/" >> $GITHUB_ENV

      - name: Deploy coverage report to GitHub Pages preview URL
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./coverage
          destination_dir: ${{ env.PR_PATH }}

      - name: Report deployment success message to PR in comment
        uses: hasura/comment-progress@v2.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          number: ${{ github.event.number }}
          id: deploy-preview
          message: "A coverage report of ${{ github.event.after }} has been committed to the [`gh-pages` branch](https://github.com//tree/gh-pages/${{ env.PR_PATH }}).\n\nThe coverage report [can be viewed here](${{ env.BASE_URL }}) once changes have propagated (this may take a few minutes)."
