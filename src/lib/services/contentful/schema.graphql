"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  documentWrapperCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): DocumentWrapperCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  heroImageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HeroImageCollection
  imageWrapperCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ImageWrapperCollection
  testRichTextCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TestRichTextCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
Overview pages for Boards, Commissions, Councils, and Task Forces. [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/boardsAndCommissions)
"""
type BoardsAndCommissions implements Entry {
  additionalInformation(locale: String): BoardsAndCommissionsAdditionalInformation
  contactBc(locale: String, preview: Boolean): ContactEntry
  contactUs(locale: String): BoardsAndCommissionsContactUs
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): BoardsAndCommissionsLinkingCollections
  meetings(locale: String): BoardsAndCommissionsMeetings
  membership(locale: String): BoardsAndCommissionsMembership
  overview(locale: String): BoardsAndCommissionsOverview
  subHeadBc(locale: String, preview: Boolean): PageSubheader
  subheading(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type BoardsAndCommissionsAdditionalInformation {
  json: JSON!
  links: BoardsAndCommissionsAdditionalInformationLinks!
}

type BoardsAndCommissionsAdditionalInformationAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type BoardsAndCommissionsAdditionalInformationEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type BoardsAndCommissionsAdditionalInformationLinks {
  assets: BoardsAndCommissionsAdditionalInformationAssets!
  entries: BoardsAndCommissionsAdditionalInformationEntries!
}

type BoardsAndCommissionsCollection {
  items: [BoardsAndCommissions]!
  limit: Int!
  skip: Int!
  total: Int!
}

type BoardsAndCommissionsContactUs {
  json: JSON!
  links: BoardsAndCommissionsContactUsLinks!
}

type BoardsAndCommissionsContactUsAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type BoardsAndCommissionsContactUsEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type BoardsAndCommissionsContactUsLinks {
  assets: BoardsAndCommissionsContactUsAssets!
  entries: BoardsAndCommissionsContactUsEntries!
}

input BoardsAndCommissionsFilter {
  AND: [BoardsAndCommissionsFilter]
  OR: [BoardsAndCommissionsFilter]
  additionalInformation_contains: String
  additionalInformation_exists: Boolean
  additionalInformation_not_contains: String
  contactBc: cfContactEntryNestedFilter
  contactBc_exists: Boolean
  contactUs_contains: String
  contactUs_exists: Boolean
  contactUs_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  meetings_contains: String
  meetings_exists: Boolean
  meetings_not_contains: String
  membership_contains: String
  membership_exists: Boolean
  membership_not_contains: String
  overview_contains: String
  overview_exists: Boolean
  overview_not_contains: String
  subHeadBc: cfPageSubheaderNestedFilter
  subHeadBc_exists: Boolean
  subheading: String
  subheading_contains: String
  subheading_exists: Boolean
  subheading_in: [String]
  subheading_not: String
  subheading_not_contains: String
  subheading_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type BoardsAndCommissionsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type BoardsAndCommissionsMeetings {
  json: JSON!
  links: BoardsAndCommissionsMeetingsLinks!
}

type BoardsAndCommissionsMeetingsAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type BoardsAndCommissionsMeetingsEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type BoardsAndCommissionsMeetingsLinks {
  assets: BoardsAndCommissionsMeetingsAssets!
  entries: BoardsAndCommissionsMeetingsEntries!
}

type BoardsAndCommissionsMembership {
  json: JSON!
  links: BoardsAndCommissionsMembershipLinks!
}

type BoardsAndCommissionsMembershipAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type BoardsAndCommissionsMembershipEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type BoardsAndCommissionsMembershipLinks {
  assets: BoardsAndCommissionsMembershipAssets!
  entries: BoardsAndCommissionsMembershipEntries!
}

enum BoardsAndCommissionsOrder {
  subheading_ASC
  subheading_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type BoardsAndCommissionsOverview {
  json: JSON!
  links: BoardsAndCommissionsOverviewLinks!
}

type BoardsAndCommissionsOverviewAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type BoardsAndCommissionsOverviewEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type BoardsAndCommissionsOverviewLinks {
  assets: BoardsAndCommissionsOverviewAssets!
  entries: BoardsAndCommissionsOverviewEntries!
}

"""
Short summary of the page topic. Appears in the first paragraph [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/briefSummary)
"""
type BriefSummary implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): BriefSummaryLinkingCollections
  summaryText(locale: String): String
  sys: Sys!
}

type BriefSummaryCollection {
  items: [BriefSummary]!
  limit: Int!
  skip: Int!
  total: Int!
}

input BriefSummaryFilter {
  AND: [BriefSummaryFilter]
  OR: [BriefSummaryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  summaryText: String
  summaryText_contains: String
  summaryText_exists: Boolean
  summaryText_in: [String]
  summaryText_not: String
  summaryText_not_contains: String
  summaryText_not_in: [String]
  sys: SysFilter
}

type BriefSummaryLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum BriefSummaryOrder {
  summaryText_ASC
  summaryText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
a bulleted list of things [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/bulletedList)
"""
type BulletedList implements Entry {
  bulletListContent(locale: String): BulletedListBulletListContent
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): BulletedListLinkingCollections
  sys: Sys!
}

type BulletedListBulletListContent {
  json: JSON!
  links: BulletedListBulletListContentLinks!
}

type BulletedListBulletListContentAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type BulletedListBulletListContentEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type BulletedListBulletListContentLinks {
  assets: BulletedListBulletListContentAssets!
  entries: BulletedListBulletListContentEntries!
}

type BulletedListCollection {
  items: [BulletedList]!
  limit: Int!
  skip: Int!
  total: Int!
}

input BulletedListFilter {
  AND: [BulletedListFilter]
  OR: [BulletedListFilter]
  bulletListContent_contains: String
  bulletListContent_exists: Boolean
  bulletListContent_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

type BulletedListLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum BulletedListOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Button or link to landing page with URL and description [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/callToAction)
"""
type CallToAction implements Entry {
  callToActionMessage(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  ctaLink(locale: String): String
  ctaName(locale: String): String
  linkText(locale: String): String
  linkedFrom(allowedLocales: [String]): CallToActionLinkingCollections
  sys: Sys!
}

type CallToActionCollection {
  items: [CallToAction]!
  limit: Int!
  skip: Int!
  total: Int!
}

input CallToActionFilter {
  AND: [CallToActionFilter]
  OR: [CallToActionFilter]
  callToActionMessage: String
  callToActionMessage_contains: String
  callToActionMessage_exists: Boolean
  callToActionMessage_in: [String]
  callToActionMessage_not: String
  callToActionMessage_not_contains: String
  callToActionMessage_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  ctaLink: String
  ctaLink_contains: String
  ctaLink_exists: Boolean
  ctaLink_in: [String]
  ctaLink_not: String
  ctaLink_not_contains: String
  ctaLink_not_in: [String]
  ctaName: String
  ctaName_contains: String
  ctaName_exists: Boolean
  ctaName_in: [String]
  ctaName_not: String
  ctaName_not_contains: String
  ctaName_not_in: [String]
  linkText: String
  linkText_contains: String
  linkText_exists: Boolean
  linkText_in: [String]
  linkText_not: String
  linkText_not_contains: String
  linkText_not_in: [String]
  sys: SysFilter
}

type CallToActionLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  serviceEntryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceEntryCollection
}

enum CallToActionOrder {
  callToActionMessage_ASC
  callToActionMessage_DESC
  ctaName_ASC
  ctaName_DESC
  linkText_ASC
  linkText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
The taxonomic classification of this piece of content [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/category)
"""
type Category implements Entry {
  categoryDescription(locale: String): String
  categoryName(locale: String): String
  categorySynonyms(locale: String): [String]
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): CategoryLinkingCollections
  linkedSubcategoriesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): CategoryLinkedSubcategoriesCollection
  sys: Sys!
}

type CategoryCollection {
  items: [Category]!
  limit: Int!
  skip: Int!
  total: Int!
}

input CategoryFilter {
  AND: [CategoryFilter]
  OR: [CategoryFilter]
  categoryDescription: String
  categoryDescription_contains: String
  categoryDescription_exists: Boolean
  categoryDescription_in: [String]
  categoryDescription_not: String
  categoryDescription_not_contains: String
  categoryDescription_not_in: [String]
  categoryName: String
  categoryName_contains: String
  categoryName_exists: Boolean
  categoryName_in: [String]
  categoryName_not: String
  categoryName_not_contains: String
  categoryName_not_in: [String]
  categorySynonyms_contains_all: [String]
  categorySynonyms_contains_none: [String]
  categorySynonyms_contains_some: [String]
  categorySynonyms_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  linkedSubcategories: cfCategoryNestedFilter
  linkedSubcategoriesCollection_exists: Boolean
  sys: SysFilter
}

type CategoryLinkedSubcategoriesCollection {
  items: [Category]!
  limit: Int!
  skip: Int!
  total: Int!
}

type CategoryLinkingCollections {
  categoryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): CategoryCollection
  documentWrapperCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): DocumentWrapperCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  eventEntryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EventEntryCollection
  imageWrapperCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ImageWrapperCollection
  serviceEntryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceEntryCollection
}

enum CategoryOrder {
  categoryDescription_ASC
  categoryDescription_DESC
  categoryName_ASC
  categoryName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Contact information for any office, program, board or commission at LDAF. [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/contactEntry)
"""
type ContactEntry implements Entry {
  city(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  email(locale: String): String
  linkedFrom(allowedLocales: [String]): ContactEntryLinkingCollections
  name(locale: String): String
  nameAndNumberCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContactEntryNameAndNumberCollection
  phoneNumber(locale: String): String
  state(locale: String): String
  streetAddress(locale: String): String
  suiteFloorEtc(locale: String): String
  sys: Sys!
  zipCode(locale: String): String
}

type ContactEntryCollection {
  items: [ContactEntry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContactEntryFilter {
  AND: [ContactEntryFilter]
  OR: [ContactEntryFilter]
  city: String
  city_contains: String
  city_exists: Boolean
  city_in: [String]
  city_not: String
  city_not_contains: String
  city_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  name: String
  nameAndNumber: cfPhoneNumberNestedFilter
  nameAndNumberCollection_exists: Boolean
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  phoneNumber: String
  phoneNumber_contains: String
  phoneNumber_exists: Boolean
  phoneNumber_in: [String]
  phoneNumber_not: String
  phoneNumber_not_contains: String
  phoneNumber_not_in: [String]
  state: String
  state_contains: String
  state_exists: Boolean
  state_in: [String]
  state_not: String
  state_not_contains: String
  state_not_in: [String]
  streetAddress: String
  streetAddress_contains: String
  streetAddress_exists: Boolean
  streetAddress_in: [String]
  streetAddress_not: String
  streetAddress_not_contains: String
  streetAddress_not_in: [String]
  suiteFloorEtc: String
  suiteFloorEtc_contains: String
  suiteFloorEtc_exists: Boolean
  suiteFloorEtc_in: [String]
  suiteFloorEtc_not: String
  suiteFloorEtc_not_contains: String
  suiteFloorEtc_not_in: [String]
  sys: SysFilter
  zipCode: String
  zipCode_contains: String
  zipCode_exists: Boolean
  zipCode_in: [String]
  zipCode_not: String
  zipCode_not_contains: String
  zipCode_not_in: [String]
}

type ContactEntryLinkingCollections {
  boardsAndCommissionsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): BoardsAndCommissionsCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  officePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): OfficePageCollection
  serviceEntryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceEntryCollection
  serviceGroupCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceGroupCollection
}

type ContactEntryNameAndNumberCollection {
  items: [PhoneNumber]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum ContactEntryOrder {
  city_ASC
  city_DESC
  email_ASC
  email_DESC
  name_ASC
  name_DESC
  phoneNumber_ASC
  phoneNumber_DESC
  state_ASC
  state_DESC
  streetAddress_ASC
  streetAddress_DESC
  suiteFloorEtc_ASC
  suiteFloorEtc_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  zipCode_ASC
  zipCode_DESC
}

"""
Headline for block-level content, such as paragraphs, tables or cards within the body of the page [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/contentBlockHeader)
"""
type ContentBlockHeader implements Entry {
  contentfulMetadata: ContentfulMetadata!
  headlineText(locale: String): String
  linkedFrom(allowedLocales: [String]): ContentBlockHeaderLinkingCollections
  sys: Sys!
}

type ContentBlockHeaderCollection {
  items: [ContentBlockHeader]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContentBlockHeaderFilter {
  AND: [ContentBlockHeaderFilter]
  OR: [ContentBlockHeaderFilter]
  contentfulMetadata: ContentfulMetadataFilter
  headlineText: String
  headlineText_contains: String
  headlineText_exists: Boolean
  headlineText_in: [String]
  headlineText_not: String
  headlineText_not_contains: String
  headlineText_not_in: [String]
  sys: SysFilter
}

type ContentBlockHeaderLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ContentBlockHeaderOrder {
  headlineText_ASC
  headlineText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

"""
"Wrapper" for embedding PDFs, MS Word Docs, spreadsheets and other non-visual, non-web document types. [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/documentWrapper)
"""
type DocumentWrapper implements Entry {
  contentfulMetadata: ContentfulMetadata!
  docWrapperName(locale: String): String
  documentCategoryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): DocumentWrapperDocumentCategoryCollection
  documentDescription(locale: String): String
  linkedFrom(allowedLocales: [String]): DocumentWrapperLinkingCollections
  sys: Sys!
  wrappedDocumentName(locale: String, preview: Boolean): Asset
}

type DocumentWrapperCollection {
  items: [DocumentWrapper]!
  limit: Int!
  skip: Int!
  total: Int!
}

type DocumentWrapperDocumentCategoryCollection {
  items: [Category]!
  limit: Int!
  skip: Int!
  total: Int!
}

input DocumentWrapperFilter {
  AND: [DocumentWrapperFilter]
  OR: [DocumentWrapperFilter]
  contentfulMetadata: ContentfulMetadataFilter
  docWrapperName: String
  docWrapperName_contains: String
  docWrapperName_exists: Boolean
  docWrapperName_in: [String]
  docWrapperName_not: String
  docWrapperName_not_contains: String
  docWrapperName_not_in: [String]
  documentCategory: cfCategoryNestedFilter
  documentCategoryCollection_exists: Boolean
  documentDescription: String
  documentDescription_contains: String
  documentDescription_exists: Boolean
  documentDescription_in: [String]
  documentDescription_not: String
  documentDescription_not_contains: String
  documentDescription_not_in: [String]
  sys: SysFilter
  wrappedDocumentName_exists: Boolean
}

type DocumentWrapperLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  eventEntryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EventEntryCollection
  serviceEntryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceEntryCollection
}

enum DocumentWrapperOrder {
  docWrapperName_ASC
  docWrapperName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
A draft of how we will structure individual navigation links that can appear either in the main menu in the header, in a submenu under the main menu in the header, or in a section sidebar. [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/draftNavigationLink)
"""
type DraftNavigationLink implements Entry {
  contentfulMetadata: ContentfulMetadata!
  link(locale: String): String
  linkedFrom(allowedLocales: [String]): DraftNavigationLinkLinkingCollections
  sys: Sys!
  text(locale: String): String
}

type DraftNavigationLinkCollection {
  items: [DraftNavigationLink]!
  limit: Int!
  skip: Int!
  total: Int!
}

input DraftNavigationLinkFilter {
  AND: [DraftNavigationLinkFilter]
  OR: [DraftNavigationLinkFilter]
  contentfulMetadata: ContentfulMetadataFilter
  link: String
  link_contains: String
  link_exists: Boolean
  link_in: [String]
  link_not: String
  link_not_contains: String
  link_not_in: [String]
  sys: SysFilter
  text: String
  text_contains: String
  text_exists: Boolean
  text_in: [String]
  text_not: String
  text_not_contains: String
  text_not_in: [String]
}

type DraftNavigationLinkLinkingCollections {
  draftNavigationMenuCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): DraftNavigationMenuCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum DraftNavigationLinkOrder {
  link_ASC
  link_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  text_ASC
  text_DESC
}

"""
A draft of how we will structure navigation menus that can appear either as the main menu in the header, a submenu under the main menu in the header, or a section sidebar. Should accept a list of references to either navigation links or child navigation menus. [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/draftNavigationMenu)
"""
type DraftNavigationMenu implements Entry {
  childrenCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): DraftNavigationMenuChildrenCollection
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): DraftNavigationMenuLinkingCollections
  sys: Sys!
  text(locale: String): String
  type(locale: String): String
}

type DraftNavigationMenuChildrenCollection {
  items: [DraftNavigationMenuChildrenItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

union DraftNavigationMenuChildrenItem = DraftNavigationLink | DraftNavigationMenu

type DraftNavigationMenuCollection {
  items: [DraftNavigationMenu]!
  limit: Int!
  skip: Int!
  total: Int!
}

input DraftNavigationMenuFilter {
  AND: [DraftNavigationMenuFilter]
  OR: [DraftNavigationMenuFilter]
  childrenCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  text: String
  text_contains: String
  text_exists: Boolean
  text_in: [String]
  text_not: String
  text_not_contains: String
  text_not_in: [String]
  type: String
  type_contains: String
  type_exists: Boolean
  type_in: [String]
  type_not: String
  type_not_contains: String
  type_not_in: [String]
}

type DraftNavigationMenuLinkingCollections {
  draftNavigationMenuCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): DraftNavigationMenuCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum DraftNavigationMenuOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  text_ASC
  text_DESC
  type_ASC
  type_DESC
}

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Consistent format for adding events to the system [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/eventEntry)
"""
type EventEntry implements Entry {
  contentfulMetadata: ContentfulMetadata!
  eventCategoryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EventEntryEventCategoryCollection
  eventDateAndTime(locale: String): DateTime
  eventDescription(locale: String): String
  eventDocumentsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EventEntryEventDocumentsCollection
  inPersonOrOnline(locale: String): String
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): EventEntryLinkingCollections
  shortTitle(locale: String): String
  sys: Sys!
}

type EventEntryCollection {
  items: [EventEntry]!
  limit: Int!
  skip: Int!
  total: Int!
}

type EventEntryEventCategoryCollection {
  items: [Category]!
  limit: Int!
  skip: Int!
  total: Int!
}

type EventEntryEventDocumentsCollection {
  items: [DocumentWrapper]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EventEntryFilter {
  AND: [EventEntryFilter]
  OR: [EventEntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  eventCategory: cfCategoryNestedFilter
  eventCategoryCollection_exists: Boolean
  eventDateAndTime: DateTime
  eventDateAndTime_exists: Boolean
  eventDateAndTime_gt: DateTime
  eventDateAndTime_gte: DateTime
  eventDateAndTime_in: [DateTime]
  eventDateAndTime_lt: DateTime
  eventDateAndTime_lte: DateTime
  eventDateAndTime_not: DateTime
  eventDateAndTime_not_in: [DateTime]
  eventDescription: String
  eventDescription_contains: String
  eventDescription_exists: Boolean
  eventDescription_in: [String]
  eventDescription_not: String
  eventDescription_not_contains: String
  eventDescription_not_in: [String]
  eventDocuments: cfDocumentWrapperNestedFilter
  eventDocumentsCollection_exists: Boolean
  inPersonOrOnline: String
  inPersonOrOnline_contains: String
  inPersonOrOnline_exists: Boolean
  inPersonOrOnline_in: [String]
  inPersonOrOnline_not: String
  inPersonOrOnline_not_contains: String
  inPersonOrOnline_not_in: [String]
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  shortTitle: String
  shortTitle_contains: String
  shortTitle_exists: Boolean
  shortTitle_in: [String]
  shortTitle_not: String
  shortTitle_not_contains: String
  shortTitle_not_in: [String]
  sys: SysFilter
}

type EventEntryLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum EventEntryOrder {
  eventDateAndTime_ASC
  eventDateAndTime_DESC
  eventDescription_ASC
  eventDescription_DESC
  inPersonOrOnline_ASC
  inPersonOrOnline_DESC
  internalName_ASC
  internalName_DESC
  shortTitle_ASC
  shortTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Large (h1) headline on top of web page [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/headline)
"""
type Headline implements Entry {
  contentfulMetadata: ContentfulMetadata!
  headlineText(locale: String): String
  linkedFrom(allowedLocales: [String]): HeadlineLinkingCollections
  sys: Sys!
}

type HeadlineCollection {
  items: [Headline]!
  limit: Int!
  skip: Int!
  total: Int!
}

input HeadlineFilter {
  AND: [HeadlineFilter]
  OR: [HeadlineFilter]
  contentfulMetadata: ContentfulMetadataFilter
  headlineText: String
  headlineText_contains: String
  headlineText_exists: Boolean
  headlineText_in: [String]
  headlineText_not: String
  headlineText_not_contains: String
  headlineText_not_in: [String]
  sys: SysFilter
}

type HeadlineLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum HeadlineOrder {
  headlineText_ASC
  headlineText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Big wide image on top of page [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/heroImage)
"""
type HeroImage implements Entry {
  altField(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  fotogCredit(locale: String): String
  imageSource(locale: String, preview: Boolean): Asset
  imageTitle(locale: String): String
  linkedFrom(allowedLocales: [String]): HeroImageLinkingCollections
  sys: Sys!
}

type HeroImageCollection {
  items: [HeroImage]!
  limit: Int!
  skip: Int!
  total: Int!
}

input HeroImageFilter {
  AND: [HeroImageFilter]
  OR: [HeroImageFilter]
  altField: String
  altField_contains: String
  altField_exists: Boolean
  altField_in: [String]
  altField_not: String
  altField_not_contains: String
  altField_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  fotogCredit: String
  fotogCredit_contains: String
  fotogCredit_exists: Boolean
  fotogCredit_in: [String]
  fotogCredit_not: String
  fotogCredit_not_contains: String
  fotogCredit_not_in: [String]
  imageSource_exists: Boolean
  imageTitle: String
  imageTitle_contains: String
  imageTitle_exists: Boolean
  imageTitle_in: [String]
  imageTitle_not: String
  imageTitle_not_contains: String
  imageTitle_not_in: [String]
  sys: SysFilter
}

type HeroImageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum HeroImageOrder {
  altField_ASC
  altField_DESC
  fotogCredit_ASC
  fotogCredit_DESC
  imageTitle_ASC
  imageTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
"wrapper" for image files to add categorization, credit and alt text metadata [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/imageWrapper)
"""
type ImageWrapper implements Entry {
  altText(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  imageCategory(locale: String, preview: Boolean): Category
  internalTitle(locale: String): String
  linkedFrom(allowedLocales: [String]): ImageWrapperLinkingCollections
  linkedImage(locale: String, preview: Boolean): Asset
  sys: Sys!
}

type ImageWrapperCollection {
  items: [ImageWrapper]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ImageWrapperFilter {
  AND: [ImageWrapperFilter]
  OR: [ImageWrapperFilter]
  altText: String
  altText_contains: String
  altText_exists: Boolean
  altText_in: [String]
  altText_not: String
  altText_not_contains: String
  altText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  imageCategory: cfCategoryNestedFilter
  imageCategory_exists: Boolean
  internalTitle: String
  internalTitle_contains: String
  internalTitle_exists: Boolean
  internalTitle_in: [String]
  internalTitle_not: String
  internalTitle_not_contains: String
  internalTitle_not_in: [String]
  linkedImage_exists: Boolean
  sys: SysFilter
}

type ImageWrapperLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ImageWrapperOrder {
  altText_ASC
  altText_DESC
  internalTitle_ASC
  internalTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
Single paragraph or bulleted list with descriptive header  [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/listWithTitle)
"""
type ListWithTitle implements Entry {
  contentfulMetadata: ContentfulMetadata!
  dropdownChoices(locale: String): String
  internalTitle(locale: String): String
  linkedFrom(allowedLocales: [String]): ListWithTitleLinkingCollections
  paragraphOrList(locale: String): ListWithTitleParagraphOrList
  sys: Sys!
}

type ListWithTitleCollection {
  items: [ListWithTitle]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ListWithTitleFilter {
  AND: [ListWithTitleFilter]
  OR: [ListWithTitleFilter]
  contentfulMetadata: ContentfulMetadataFilter
  dropdownChoices: String
  dropdownChoices_contains: String
  dropdownChoices_exists: Boolean
  dropdownChoices_in: [String]
  dropdownChoices_not: String
  dropdownChoices_not_contains: String
  dropdownChoices_not_in: [String]
  internalTitle: String
  internalTitle_contains: String
  internalTitle_exists: Boolean
  internalTitle_in: [String]
  internalTitle_not: String
  internalTitle_not_contains: String
  internalTitle_not_in: [String]
  paragraphOrList_contains: String
  paragraphOrList_exists: Boolean
  paragraphOrList_not_contains: String
  sys: SysFilter
}

type ListWithTitleLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  serviceEntryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceEntryCollection
}

enum ListWithTitleOrder {
  dropdownChoices_ASC
  dropdownChoices_DESC
  internalTitle_ASC
  internalTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ListWithTitleParagraphOrList {
  json: JSON!
  links: ListWithTitleParagraphOrListLinks!
}

type ListWithTitleParagraphOrListAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ListWithTitleParagraphOrListEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ListWithTitleParagraphOrListLinks {
  assets: ListWithTitleParagraphOrListAssets!
  entries: ListWithTitleParagraphOrListEntries!
}

"""
Overview pages for LDAF offices. [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/officePage)
"""
type OfficePage implements Entry {
  contactInfo(locale: String, preview: Boolean): ContactEntry
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): OfficePageDescription
  linkedFrom(allowedLocales: [String]): OfficePageLinkingCollections
  metadata(locale: String, preview: Boolean): PageMetadata
  officePageTitle(locale: String): String
  servicesAndPrograms(locale: String): OfficePageServicesAndPrograms
  subheader(locale: String): String
  sys: Sys!
}

type OfficePageCollection {
  items: [OfficePage]!
  limit: Int!
  skip: Int!
  total: Int!
}

type OfficePageDescription {
  json: JSON!
  links: OfficePageDescriptionLinks!
}

type OfficePageDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type OfficePageDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type OfficePageDescriptionLinks {
  assets: OfficePageDescriptionAssets!
  entries: OfficePageDescriptionEntries!
}

input OfficePageFilter {
  AND: [OfficePageFilter]
  OR: [OfficePageFilter]
  contactInfo: cfContactEntryNestedFilter
  contactInfo_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  metadata: cfPageMetadataNestedFilter
  metadata_exists: Boolean
  officePageTitle: String
  officePageTitle_contains: String
  officePageTitle_exists: Boolean
  officePageTitle_in: [String]
  officePageTitle_not: String
  officePageTitle_not_contains: String
  officePageTitle_not_in: [String]
  servicesAndPrograms_contains: String
  servicesAndPrograms_exists: Boolean
  servicesAndPrograms_not_contains: String
  subheader: String
  subheader_contains: String
  subheader_exists: Boolean
  subheader_in: [String]
  subheader_not: String
  subheader_not_contains: String
  subheader_not_in: [String]
  sys: SysFilter
}

type OfficePageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum OfficePageOrder {
  officePageTitle_ASC
  officePageTitle_DESC
  subheader_ASC
  subheader_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type OfficePageServicesAndPrograms {
  json: JSON!
  links: OfficePageServicesAndProgramsLinks!
}

type OfficePageServicesAndProgramsAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type OfficePageServicesAndProgramsEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type OfficePageServicesAndProgramsLinks {
  assets: OfficePageServicesAndProgramsAssets!
  entries: OfficePageServicesAndProgramsEntries!
}

"""
This is the name of the office, division, program, board or commission as it's listed in the org chart [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/organizationalSectionName)
"""
type OrganizationalSectionName implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): OrganizationalSectionNameLinkingCollections
  officeEmail(locale: String): String
  sectionName(locale: String): String
  sys: Sys!
}

type OrganizationalSectionNameCollection {
  items: [OrganizationalSectionName]!
  limit: Int!
  skip: Int!
  total: Int!
}

input OrganizationalSectionNameFilter {
  AND: [OrganizationalSectionNameFilter]
  OR: [OrganizationalSectionNameFilter]
  contentfulMetadata: ContentfulMetadataFilter
  officeEmail: String
  officeEmail_contains: String
  officeEmail_exists: Boolean
  officeEmail_in: [String]
  officeEmail_not: String
  officeEmail_not_contains: String
  officeEmail_not_in: [String]
  sectionName: String
  sectionName_contains: String
  sectionName_exists: Boolean
  sectionName_in: [String]
  sectionName_not: String
  sectionName_not_contains: String
  sectionName_not_in: [String]
  sys: SysFilter
}

type OrganizationalSectionNameLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum OrganizationalSectionNameOrder {
  officeEmail_ASC
  officeEmail_DESC
  sectionName_ASC
  sectionName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/pageMetadata)
"""
type PageMetadata implements Entry {
  contentfulMetadata: ContentfulMetadata!
  internalTitle(locale: String): String
  linkedFrom(allowedLocales: [String]): PageMetadataLinkingCollections
  metaDescription(locale: String): String
  metaTitle(locale: String): String
  pageTitle(locale: String): String
  slug(locale: String): String
  sys: Sys!
}

type PageMetadataCollection {
  items: [PageMetadata]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageMetadataFilter {
  AND: [PageMetadataFilter]
  OR: [PageMetadataFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalTitle: String
  internalTitle_contains: String
  internalTitle_exists: Boolean
  internalTitle_in: [String]
  internalTitle_not: String
  internalTitle_not_contains: String
  internalTitle_not_in: [String]
  metaDescription: String
  metaDescription_contains: String
  metaDescription_exists: Boolean
  metaDescription_in: [String]
  metaDescription_not: String
  metaDescription_not_contains: String
  metaDescription_not_in: [String]
  metaTitle: String
  metaTitle_contains: String
  metaTitle_exists: Boolean
  metaTitle_in: [String]
  metaTitle_not: String
  metaTitle_not_contains: String
  metaTitle_not_in: [String]
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}

type PageMetadataLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  officePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): OfficePageCollection
}

enum PageMetadataOrder {
  internalTitle_ASC
  internalTitle_DESC
  metaTitle_ASC
  metaTitle_DESC
  pageTitle_ASC
  pageTitle_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Headline for content sections within body of page [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/pageSectionHeadline)
"""
type PageSectionHeadline implements Entry {
  contentfulMetadata: ContentfulMetadata!
  headlineText(locale: String): String
  linkedFrom(allowedLocales: [String]): PageSectionHeadlineLinkingCollections
  sys: Sys!
}

type PageSectionHeadlineCollection {
  items: [PageSectionHeadline]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageSectionHeadlineFilter {
  AND: [PageSectionHeadlineFilter]
  OR: [PageSectionHeadlineFilter]
  contentfulMetadata: ContentfulMetadataFilter
  headlineText: String
  headlineText_contains: String
  headlineText_exists: Boolean
  headlineText_in: [String]
  headlineText_not: String
  headlineText_not_contains: String
  headlineText_not_in: [String]
  sys: SysFilter
}

type PageSectionHeadlineLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PageSectionHeadlineOrder {
  headlineText_ASC
  headlineText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Short, descriptive subheading beneath page title [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/pageSubheader)
"""
type PageSubheader implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): PageSubheaderLinkingCollections
  subheadText(locale: String): String
  sys: Sys!
}

type PageSubheaderCollection {
  items: [PageSubheader]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageSubheaderFilter {
  AND: [PageSubheaderFilter]
  OR: [PageSubheaderFilter]
  contentfulMetadata: ContentfulMetadataFilter
  subheadText: String
  subheadText_contains: String
  subheadText_exists: Boolean
  subheadText_in: [String]
  subheadText_not: String
  subheadText_not_contains: String
  subheadText_not_in: [String]
  sys: SysFilter
}

type PageSubheaderLinkingCollections {
  boardsAndCommissionsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): BoardsAndCommissionsCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  serviceEntryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceEntryCollection
}

enum PageSubheaderOrder {
  subheadText_ASC
  subheadText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
The phone number of any office, program, board, commission or individual at LDAF [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/phoneNumber)
"""
type PhoneNumber implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): PhoneNumberLinkingCollections
  personWithPhoneNumber(locale: String): String
  phoneNumber(locale: String): String
  sys: Sys!
}

type PhoneNumberCollection {
  items: [PhoneNumber]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PhoneNumberFilter {
  AND: [PhoneNumberFilter]
  OR: [PhoneNumberFilter]
  contentfulMetadata: ContentfulMetadataFilter
  personWithPhoneNumber: String
  personWithPhoneNumber_contains: String
  personWithPhoneNumber_exists: Boolean
  personWithPhoneNumber_in: [String]
  personWithPhoneNumber_not: String
  personWithPhoneNumber_not_contains: String
  personWithPhoneNumber_not_in: [String]
  phoneNumber: String
  phoneNumber_contains: String
  phoneNumber_exists: Boolean
  phoneNumber_in: [String]
  phoneNumber_not: String
  phoneNumber_not_contains: String
  phoneNumber_not_in: [String]
  sys: SysFilter
}

type PhoneNumberLinkingCollections {
  contactEntryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContactEntryCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PhoneNumberOrder {
  personWithPhoneNumber_ASC
  personWithPhoneNumber_DESC
  phoneNumber_ASC
  phoneNumber_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
This is the official name of the LDAF program  as it's listed in the org chart [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/programName)
"""
type ProgramName implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ProgramNameLinkingCollections
  programEmail(locale: String): String
  sectionName(locale: String): String
  sys: Sys!
}

type ProgramNameCollection {
  items: [ProgramName]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ProgramNameFilter {
  AND: [ProgramNameFilter]
  OR: [ProgramNameFilter]
  contentfulMetadata: ContentfulMetadataFilter
  programEmail: String
  programEmail_contains: String
  programEmail_exists: Boolean
  programEmail_in: [String]
  programEmail_not: String
  programEmail_not_contains: String
  programEmail_not_in: [String]
  sectionName: String
  sectionName_contains: String
  sectionName_exists: Boolean
  sectionName_in: [String]
  sectionName_not: String
  sectionName_not_contains: String
  sectionName_not_in: [String]
  sys: SysFilter
}

type ProgramNameLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ProgramNameOrder {
  programEmail_ASC
  programEmail_DESC
  sectionName_ASC
  sectionName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  boardsAndCommissions(id: String!, locale: String, preview: Boolean): BoardsAndCommissions
  boardsAndCommissionsCollection(limit: Int = 100, locale: String, order: [BoardsAndCommissionsOrder], preview: Boolean, skip: Int = 0, where: BoardsAndCommissionsFilter): BoardsAndCommissionsCollection
  briefSummary(id: String!, locale: String, preview: Boolean): BriefSummary
  briefSummaryCollection(limit: Int = 100, locale: String, order: [BriefSummaryOrder], preview: Boolean, skip: Int = 0, where: BriefSummaryFilter): BriefSummaryCollection
  bulletedList(id: String!, locale: String, preview: Boolean): BulletedList
  bulletedListCollection(limit: Int = 100, locale: String, order: [BulletedListOrder], preview: Boolean, skip: Int = 0, where: BulletedListFilter): BulletedListCollection
  callToAction(id: String!, locale: String, preview: Boolean): CallToAction
  callToActionCollection(limit: Int = 100, locale: String, order: [CallToActionOrder], preview: Boolean, skip: Int = 0, where: CallToActionFilter): CallToActionCollection
  category(id: String!, locale: String, preview: Boolean): Category
  categoryCollection(limit: Int = 100, locale: String, order: [CategoryOrder], preview: Boolean, skip: Int = 0, where: CategoryFilter): CategoryCollection
  contactEntry(id: String!, locale: String, preview: Boolean): ContactEntry
  contactEntryCollection(limit: Int = 100, locale: String, order: [ContactEntryOrder], preview: Boolean, skip: Int = 0, where: ContactEntryFilter): ContactEntryCollection
  contentBlockHeader(id: String!, locale: String, preview: Boolean): ContentBlockHeader
  contentBlockHeaderCollection(limit: Int = 100, locale: String, order: [ContentBlockHeaderOrder], preview: Boolean, skip: Int = 0, where: ContentBlockHeaderFilter): ContentBlockHeaderCollection
  documentWrapper(id: String!, locale: String, preview: Boolean): DocumentWrapper
  documentWrapperCollection(limit: Int = 100, locale: String, order: [DocumentWrapperOrder], preview: Boolean, skip: Int = 0, where: DocumentWrapperFilter): DocumentWrapperCollection
  draftNavigationLink(id: String!, locale: String, preview: Boolean): DraftNavigationLink
  draftNavigationLinkCollection(limit: Int = 100, locale: String, order: [DraftNavigationLinkOrder], preview: Boolean, skip: Int = 0, where: DraftNavigationLinkFilter): DraftNavigationLinkCollection
  draftNavigationMenu(id: String!, locale: String, preview: Boolean): DraftNavigationMenu
  draftNavigationMenuCollection(limit: Int = 100, locale: String, order: [DraftNavigationMenuOrder], preview: Boolean, skip: Int = 0, where: DraftNavigationMenuFilter): DraftNavigationMenuCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  eventEntry(id: String!, locale: String, preview: Boolean): EventEntry
  eventEntryCollection(limit: Int = 100, locale: String, order: [EventEntryOrder], preview: Boolean, skip: Int = 0, where: EventEntryFilter): EventEntryCollection
  headline(id: String!, locale: String, preview: Boolean): Headline
  headlineCollection(limit: Int = 100, locale: String, order: [HeadlineOrder], preview: Boolean, skip: Int = 0, where: HeadlineFilter): HeadlineCollection
  heroImage(id: String!, locale: String, preview: Boolean): HeroImage
  heroImageCollection(limit: Int = 100, locale: String, order: [HeroImageOrder], preview: Boolean, skip: Int = 0, where: HeroImageFilter): HeroImageCollection
  imageWrapper(id: String!, locale: String, preview: Boolean): ImageWrapper
  imageWrapperCollection(limit: Int = 100, locale: String, order: [ImageWrapperOrder], preview: Boolean, skip: Int = 0, where: ImageWrapperFilter): ImageWrapperCollection
  listWithTitle(id: String!, locale: String, preview: Boolean): ListWithTitle
  listWithTitleCollection(limit: Int = 100, locale: String, order: [ListWithTitleOrder], preview: Boolean, skip: Int = 0, where: ListWithTitleFilter): ListWithTitleCollection
  officePage(id: String!, locale: String, preview: Boolean): OfficePage
  officePageCollection(limit: Int = 100, locale: String, order: [OfficePageOrder], preview: Boolean, skip: Int = 0, where: OfficePageFilter): OfficePageCollection
  organizationalSectionName(id: String!, locale: String, preview: Boolean): OrganizationalSectionName
  organizationalSectionNameCollection(limit: Int = 100, locale: String, order: [OrganizationalSectionNameOrder], preview: Boolean, skip: Int = 0, where: OrganizationalSectionNameFilter): OrganizationalSectionNameCollection
  pageMetadata(id: String!, locale: String, preview: Boolean): PageMetadata
  pageMetadataCollection(limit: Int = 100, locale: String, order: [PageMetadataOrder], preview: Boolean, skip: Int = 0, where: PageMetadataFilter): PageMetadataCollection
  pageSectionHeadline(id: String!, locale: String, preview: Boolean): PageSectionHeadline
  pageSectionHeadlineCollection(limit: Int = 100, locale: String, order: [PageSectionHeadlineOrder], preview: Boolean, skip: Int = 0, where: PageSectionHeadlineFilter): PageSectionHeadlineCollection
  pageSubheader(id: String!, locale: String, preview: Boolean): PageSubheader
  pageSubheaderCollection(limit: Int = 100, locale: String, order: [PageSubheaderOrder], preview: Boolean, skip: Int = 0, where: PageSubheaderFilter): PageSubheaderCollection
  phoneNumber(id: String!, locale: String, preview: Boolean): PhoneNumber
  phoneNumberCollection(limit: Int = 100, locale: String, order: [PhoneNumberOrder], preview: Boolean, skip: Int = 0, where: PhoneNumberFilter): PhoneNumberCollection
  programName(id: String!, locale: String, preview: Boolean): ProgramName
  programNameCollection(limit: Int = 100, locale: String, order: [ProgramNameOrder], preview: Boolean, skip: Int = 0, where: ProgramNameFilter): ProgramNameCollection
  serviceEntry(id: String!, locale: String, preview: Boolean): ServiceEntry
  serviceEntryCollection(limit: Int = 100, locale: String, order: [ServiceEntryOrder], preview: Boolean, skip: Int = 0, where: ServiceEntryFilter): ServiceEntryCollection
  serviceEntryFieldLabel(id: String!, locale: String, preview: Boolean): ServiceEntryFieldLabel
  serviceEntryFieldLabelCollection(limit: Int = 100, locale: String, order: [ServiceEntryFieldLabelOrder], preview: Boolean, skip: Int = 0, where: ServiceEntryFieldLabelFilter): ServiceEntryFieldLabelCollection
  serviceEntryFieldSet(id: String!, locale: String, preview: Boolean): ServiceEntryFieldSet
  serviceEntryFieldSetCollection(limit: Int = 100, locale: String, order: [ServiceEntryFieldSetOrder], preview: Boolean, skip: Int = 0, where: ServiceEntryFieldSetFilter): ServiceEntryFieldSetCollection
  serviceGroup(id: String!, locale: String, preview: Boolean): ServiceGroup
  serviceGroupCollection(limit: Int = 100, locale: String, order: [ServiceGroupOrder], preview: Boolean, skip: Int = 0, where: ServiceGroupFilter): ServiceGroupCollection
  testRichText(id: String!, locale: String, preview: Boolean): TestRichText
  testRichTextCollection(limit: Int = 100, locale: String, order: [TestRichTextOrder], preview: Boolean, skip: Int = 0, where: TestRichTextFilter): TestRichTextCollection
}

"""
Description of a program's task-related service [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/serviceEntry)
"""
type ServiceEntry implements Entry {
  applicationMethods(locale: String): String
  applicationProcess(locale: String): ServiceEntryApplicationProcess
  contactInformationCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceEntryContactInformationCollection
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): ServiceEntryDescription
  entryTitle(locale: String): String
  linkedDocumentCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceEntryLinkedDocumentCollection
  linkedFrom(allowedLocales: [String]): ServiceEntryLinkingCollections
  requirements(locale: String): ServiceEntryRequirements
  serviceCategoryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceEntryServiceCategoryCollection
  serviceCtaCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceEntryServiceCtaCollection
  serviceDescriptionsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceEntryServiceDescriptionsCollection
  serviceSubhead(locale: String, preview: Boolean): PageSubheader
  subheading(locale: String): String
  sys: Sys!
}

type ServiceEntryApplicationProcess {
  json: JSON!
  links: ServiceEntryApplicationProcessLinks!
}

type ServiceEntryApplicationProcessAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ServiceEntryApplicationProcessEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ServiceEntryApplicationProcessLinks {
  assets: ServiceEntryApplicationProcessAssets!
  entries: ServiceEntryApplicationProcessEntries!
}

type ServiceEntryCollection {
  items: [ServiceEntry]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ServiceEntryContactInformationCollection {
  items: [ContactEntry]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ServiceEntryDescription {
  json: JSON!
  links: ServiceEntryDescriptionLinks!
}

type ServiceEntryDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ServiceEntryDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ServiceEntryDescriptionLinks {
  assets: ServiceEntryDescriptionAssets!
  entries: ServiceEntryDescriptionEntries!
}

"""
Describes the kind of information you are supplying in the accompanying service info field [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/serviceEntryFieldLabel)
"""
type ServiceEntryFieldLabel implements Entry {
  contentfulMetadata: ContentfulMetadata!
  fieldLabel(locale: String): [String]
  linkedFrom(allowedLocales: [String]): ServiceEntryFieldLabelLinkingCollections
  sys: Sys!
}

type ServiceEntryFieldLabelCollection {
  items: [ServiceEntryFieldLabel]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ServiceEntryFieldLabelFilter {
  AND: [ServiceEntryFieldLabelFilter]
  OR: [ServiceEntryFieldLabelFilter]
  contentfulMetadata: ContentfulMetadataFilter
  fieldLabel_contains_all: [String]
  fieldLabel_contains_none: [String]
  fieldLabel_contains_some: [String]
  fieldLabel_exists: Boolean
  sys: SysFilter
}

type ServiceEntryFieldLabelLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ServiceEntryFieldLabelOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Labeled fields and rich text to describe requirements, steps etc in a service etry [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/serviceEntryFieldSet)
"""
type ServiceEntryFieldSet implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ServiceEntryFieldSetLinkingCollections
  serviceEntryFieldName(locale: String): String
  serviceFieldInput(locale: String): ServiceEntryFieldSetServiceFieldInput
  serviceInfoType(locale: String): String
  sys: Sys!
}

type ServiceEntryFieldSetCollection {
  items: [ServiceEntryFieldSet]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ServiceEntryFieldSetFilter {
  AND: [ServiceEntryFieldSetFilter]
  OR: [ServiceEntryFieldSetFilter]
  contentfulMetadata: ContentfulMetadataFilter
  serviceEntryFieldName: String
  serviceEntryFieldName_contains: String
  serviceEntryFieldName_exists: Boolean
  serviceEntryFieldName_in: [String]
  serviceEntryFieldName_not: String
  serviceEntryFieldName_not_contains: String
  serviceEntryFieldName_not_in: [String]
  serviceFieldInput_contains: String
  serviceFieldInput_exists: Boolean
  serviceFieldInput_not_contains: String
  serviceInfoType: String
  serviceInfoType_contains: String
  serviceInfoType_exists: Boolean
  serviceInfoType_in: [String]
  serviceInfoType_not: String
  serviceInfoType_not_contains: String
  serviceInfoType_not_in: [String]
  sys: SysFilter
}

type ServiceEntryFieldSetLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ServiceEntryFieldSetOrder {
  serviceEntryFieldName_ASC
  serviceEntryFieldName_DESC
  serviceInfoType_ASC
  serviceInfoType_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ServiceEntryFieldSetServiceFieldInput {
  json: JSON!
  links: ServiceEntryFieldSetServiceFieldInputLinks!
}

type ServiceEntryFieldSetServiceFieldInputAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ServiceEntryFieldSetServiceFieldInputEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ServiceEntryFieldSetServiceFieldInputLinks {
  assets: ServiceEntryFieldSetServiceFieldInputAssets!
  entries: ServiceEntryFieldSetServiceFieldInputEntries!
}

input ServiceEntryFilter {
  AND: [ServiceEntryFilter]
  OR: [ServiceEntryFilter]
  applicationMethods: String
  applicationMethods_contains: String
  applicationMethods_exists: Boolean
  applicationMethods_in: [String]
  applicationMethods_not: String
  applicationMethods_not_contains: String
  applicationMethods_not_in: [String]
  applicationProcess_contains: String
  applicationProcess_exists: Boolean
  applicationProcess_not_contains: String
  contactInformation: cfContactEntryNestedFilter
  contactInformationCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  entryTitle: String
  entryTitle_contains: String
  entryTitle_exists: Boolean
  entryTitle_in: [String]
  entryTitle_not: String
  entryTitle_not_contains: String
  entryTitle_not_in: [String]
  linkedDocument: cfDocumentWrapperNestedFilter
  linkedDocumentCollection_exists: Boolean
  requirements_contains: String
  requirements_exists: Boolean
  requirements_not_contains: String
  serviceCategory: cfCategoryNestedFilter
  serviceCategoryCollection_exists: Boolean
  serviceCta: cfCallToActionNestedFilter
  serviceCtaCollection_exists: Boolean
  serviceDescriptions: cfListWithTitleNestedFilter
  serviceDescriptionsCollection_exists: Boolean
  serviceSubhead: cfPageSubheaderNestedFilter
  serviceSubhead_exists: Boolean
  subheading: String
  subheading_contains: String
  subheading_exists: Boolean
  subheading_in: [String]
  subheading_not: String
  subheading_not_contains: String
  subheading_not_in: [String]
  sys: SysFilter
}

type ServiceEntryLinkedDocumentCollection {
  items: [DocumentWrapper]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ServiceEntryLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  serviceGroupCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceGroupCollection
}

enum ServiceEntryOrder {
  applicationMethods_ASC
  applicationMethods_DESC
  entryTitle_ASC
  entryTitle_DESC
  subheading_ASC
  subheading_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ServiceEntryRequirements {
  json: JSON!
  links: ServiceEntryRequirementsLinks!
}

type ServiceEntryRequirementsAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ServiceEntryRequirementsEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ServiceEntryRequirementsLinks {
  assets: ServiceEntryRequirementsAssets!
  entries: ServiceEntryRequirementsEntries!
}

type ServiceEntryServiceCategoryCollection {
  items: [Category]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ServiceEntryServiceCtaCollection {
  items: [CallToAction]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ServiceEntryServiceDescriptionsCollection {
  items: [ListWithTitle]!
  limit: Int!
  skip: Int!
  total: Int!
}

"""
Contains a group of related service entries [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/serviceGroup)
"""
type ServiceGroup implements Entry {
  additionalResources(locale: String): ServiceGroupAdditionalResources
  contactInfoCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceGroupContactInfoCollection
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): ServiceGroupDescription
  linkedFrom(allowedLocales: [String]): ServiceGroupLinkingCollections
  rulesAndRegulations(locale: String): ServiceGroupRulesAndRegulations
  serviceEntriesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceGroupServiceEntriesCollection
  subheading(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type ServiceGroupAdditionalResources {
  json: JSON!
  links: ServiceGroupAdditionalResourcesLinks!
}

type ServiceGroupAdditionalResourcesAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ServiceGroupAdditionalResourcesEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ServiceGroupAdditionalResourcesLinks {
  assets: ServiceGroupAdditionalResourcesAssets!
  entries: ServiceGroupAdditionalResourcesEntries!
}

type ServiceGroupCollection {
  items: [ServiceGroup]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ServiceGroupContactInfoCollection {
  items: [ContactEntry]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ServiceGroupDescription {
  json: JSON!
  links: ServiceGroupDescriptionLinks!
}

type ServiceGroupDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ServiceGroupDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ServiceGroupDescriptionLinks {
  assets: ServiceGroupDescriptionAssets!
  entries: ServiceGroupDescriptionEntries!
}

input ServiceGroupFilter {
  AND: [ServiceGroupFilter]
  OR: [ServiceGroupFilter]
  additionalResources_contains: String
  additionalResources_exists: Boolean
  additionalResources_not_contains: String
  contactInfo: cfContactEntryNestedFilter
  contactInfoCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  rulesAndRegulations_contains: String
  rulesAndRegulations_exists: Boolean
  rulesAndRegulations_not_contains: String
  serviceEntries: cfServiceEntryNestedFilter
  serviceEntriesCollection_exists: Boolean
  subheading: String
  subheading_contains: String
  subheading_exists: Boolean
  subheading_in: [String]
  subheading_not: String
  subheading_not_contains: String
  subheading_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ServiceGroupLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ServiceGroupOrder {
  subheading_ASC
  subheading_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type ServiceGroupRulesAndRegulations {
  json: JSON!
  links: ServiceGroupRulesAndRegulationsLinks!
}

type ServiceGroupRulesAndRegulationsAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ServiceGroupRulesAndRegulationsEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ServiceGroupRulesAndRegulationsLinks {
  assets: ServiceGroupRulesAndRegulationsAssets!
  entries: ServiceGroupRulesAndRegulationsEntries!
}

type ServiceGroupServiceEntriesCollection {
  items: [ServiceEntry]!
  limit: Int!
  skip: Int!
  total: Int!
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
Example content type with some rich text. [See type definition](https://app.contentful.com/spaces/pc5e1rlgfrov/content_types/testRichText)
"""
type TestRichText implements Entry {
  body(locale: String): TestRichTextBody
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): TestRichTextLinkingCollections
  mainImage(locale: String, preview: Boolean): Asset
  sys: Sys!
  title(locale: String): String
}

type TestRichTextBody {
  json: JSON!
  links: TestRichTextBodyLinks!
}

type TestRichTextBodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type TestRichTextBodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type TestRichTextBodyLinks {
  assets: TestRichTextBodyAssets!
  entries: TestRichTextBodyEntries!
}

type TestRichTextCollection {
  items: [TestRichText]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TestRichTextFilter {
  AND: [TestRichTextFilter]
  OR: [TestRichTextFilter]
  body_contains: String
  body_exists: Boolean
  body_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  mainImage_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type TestRichTextLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum TestRichTextOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

input cfCallToActionNestedFilter {
  AND: [cfCallToActionNestedFilter]
  OR: [cfCallToActionNestedFilter]
  callToActionMessage: String
  callToActionMessage_contains: String
  callToActionMessage_exists: Boolean
  callToActionMessage_in: [String]
  callToActionMessage_not: String
  callToActionMessage_not_contains: String
  callToActionMessage_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  ctaLink: String
  ctaLink_contains: String
  ctaLink_exists: Boolean
  ctaLink_in: [String]
  ctaLink_not: String
  ctaLink_not_contains: String
  ctaLink_not_in: [String]
  ctaName: String
  ctaName_contains: String
  ctaName_exists: Boolean
  ctaName_in: [String]
  ctaName_not: String
  ctaName_not_contains: String
  ctaName_not_in: [String]
  linkText: String
  linkText_contains: String
  linkText_exists: Boolean
  linkText_in: [String]
  linkText_not: String
  linkText_not_contains: String
  linkText_not_in: [String]
  sys: SysFilter
}

input cfCategoryNestedFilter {
  AND: [cfCategoryNestedFilter]
  OR: [cfCategoryNestedFilter]
  categoryDescription: String
  categoryDescription_contains: String
  categoryDescription_exists: Boolean
  categoryDescription_in: [String]
  categoryDescription_not: String
  categoryDescription_not_contains: String
  categoryDescription_not_in: [String]
  categoryName: String
  categoryName_contains: String
  categoryName_exists: Boolean
  categoryName_in: [String]
  categoryName_not: String
  categoryName_not_contains: String
  categoryName_not_in: [String]
  categorySynonyms_contains_all: [String]
  categorySynonyms_contains_none: [String]
  categorySynonyms_contains_some: [String]
  categorySynonyms_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  linkedSubcategoriesCollection_exists: Boolean
  sys: SysFilter
}

input cfContactEntryNestedFilter {
  AND: [cfContactEntryNestedFilter]
  OR: [cfContactEntryNestedFilter]
  city: String
  city_contains: String
  city_exists: Boolean
  city_in: [String]
  city_not: String
  city_not_contains: String
  city_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  name: String
  nameAndNumberCollection_exists: Boolean
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  phoneNumber: String
  phoneNumber_contains: String
  phoneNumber_exists: Boolean
  phoneNumber_in: [String]
  phoneNumber_not: String
  phoneNumber_not_contains: String
  phoneNumber_not_in: [String]
  state: String
  state_contains: String
  state_exists: Boolean
  state_in: [String]
  state_not: String
  state_not_contains: String
  state_not_in: [String]
  streetAddress: String
  streetAddress_contains: String
  streetAddress_exists: Boolean
  streetAddress_in: [String]
  streetAddress_not: String
  streetAddress_not_contains: String
  streetAddress_not_in: [String]
  suiteFloorEtc: String
  suiteFloorEtc_contains: String
  suiteFloorEtc_exists: Boolean
  suiteFloorEtc_in: [String]
  suiteFloorEtc_not: String
  suiteFloorEtc_not_contains: String
  suiteFloorEtc_not_in: [String]
  sys: SysFilter
  zipCode: String
  zipCode_contains: String
  zipCode_exists: Boolean
  zipCode_in: [String]
  zipCode_not: String
  zipCode_not_contains: String
  zipCode_not_in: [String]
}

input cfDocumentWrapperNestedFilter {
  AND: [cfDocumentWrapperNestedFilter]
  OR: [cfDocumentWrapperNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  docWrapperName: String
  docWrapperName_contains: String
  docWrapperName_exists: Boolean
  docWrapperName_in: [String]
  docWrapperName_not: String
  docWrapperName_not_contains: String
  docWrapperName_not_in: [String]
  documentCategoryCollection_exists: Boolean
  documentDescription: String
  documentDescription_contains: String
  documentDescription_exists: Boolean
  documentDescription_in: [String]
  documentDescription_not: String
  documentDescription_not_contains: String
  documentDescription_not_in: [String]
  sys: SysFilter
  wrappedDocumentName_exists: Boolean
}

input cfListWithTitleNestedFilter {
  AND: [cfListWithTitleNestedFilter]
  OR: [cfListWithTitleNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  dropdownChoices: String
  dropdownChoices_contains: String
  dropdownChoices_exists: Boolean
  dropdownChoices_in: [String]
  dropdownChoices_not: String
  dropdownChoices_not_contains: String
  dropdownChoices_not_in: [String]
  internalTitle: String
  internalTitle_contains: String
  internalTitle_exists: Boolean
  internalTitle_in: [String]
  internalTitle_not: String
  internalTitle_not_contains: String
  internalTitle_not_in: [String]
  paragraphOrList_contains: String
  paragraphOrList_exists: Boolean
  paragraphOrList_not_contains: String
  sys: SysFilter
}

input cfPageMetadataNestedFilter {
  AND: [cfPageMetadataNestedFilter]
  OR: [cfPageMetadataNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalTitle: String
  internalTitle_contains: String
  internalTitle_exists: Boolean
  internalTitle_in: [String]
  internalTitle_not: String
  internalTitle_not_contains: String
  internalTitle_not_in: [String]
  metaDescription: String
  metaDescription_contains: String
  metaDescription_exists: Boolean
  metaDescription_in: [String]
  metaDescription_not: String
  metaDescription_not_contains: String
  metaDescription_not_in: [String]
  metaTitle: String
  metaTitle_contains: String
  metaTitle_exists: Boolean
  metaTitle_in: [String]
  metaTitle_not: String
  metaTitle_not_contains: String
  metaTitle_not_in: [String]
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}

input cfPageSubheaderNestedFilter {
  AND: [cfPageSubheaderNestedFilter]
  OR: [cfPageSubheaderNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  subheadText: String
  subheadText_contains: String
  subheadText_exists: Boolean
  subheadText_in: [String]
  subheadText_not: String
  subheadText_not_contains: String
  subheadText_not_in: [String]
  sys: SysFilter
}

input cfPhoneNumberNestedFilter {
  AND: [cfPhoneNumberNestedFilter]
  OR: [cfPhoneNumberNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  personWithPhoneNumber: String
  personWithPhoneNumber_contains: String
  personWithPhoneNumber_exists: Boolean
  personWithPhoneNumber_in: [String]
  personWithPhoneNumber_not: String
  personWithPhoneNumber_not_contains: String
  personWithPhoneNumber_not_in: [String]
  phoneNumber: String
  phoneNumber_contains: String
  phoneNumber_exists: Boolean
  phoneNumber_in: [String]
  phoneNumber_not: String
  phoneNumber_not_contains: String
  phoneNumber_not_in: [String]
  sys: SysFilter
}

input cfServiceEntryNestedFilter {
  AND: [cfServiceEntryNestedFilter]
  OR: [cfServiceEntryNestedFilter]
  applicationMethods: String
  applicationMethods_contains: String
  applicationMethods_exists: Boolean
  applicationMethods_in: [String]
  applicationMethods_not: String
  applicationMethods_not_contains: String
  applicationMethods_not_in: [String]
  applicationProcess_contains: String
  applicationProcess_exists: Boolean
  applicationProcess_not_contains: String
  contactInformationCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  entryTitle: String
  entryTitle_contains: String
  entryTitle_exists: Boolean
  entryTitle_in: [String]
  entryTitle_not: String
  entryTitle_not_contains: String
  entryTitle_not_in: [String]
  linkedDocumentCollection_exists: Boolean
  requirements_contains: String
  requirements_exists: Boolean
  requirements_not_contains: String
  serviceCategoryCollection_exists: Boolean
  serviceCtaCollection_exists: Boolean
  serviceDescriptionsCollection_exists: Boolean
  serviceSubhead_exists: Boolean
  subheading: String
  subheading_contains: String
  subheading_exists: Boolean
  subheading_in: [String]
  subheading_not: String
  subheading_not_contains: String
  subheading_not_in: [String]
  sys: SysFilter
}